D G "__PCH__" 0 0 ""4.068""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""13-May-15""
D G "__TIME__" 0 0 ""12:44:50"" "Standard Header file for the PIC18F2550 device ////////////////"
d G "PIN_A0" 2 27 "31744"
d G "PIN_A1" 2 28 "31745"
d G "PIN_A2" 2 29 "31746"
d G "PIN_A3" 2 30 "31747"
d G "PIN_A4" 2 31 "31748"
d G "PIN_A5" 2 32 "31749"
d G "PIN_A6" 2 33 "31750"
d G "PIN_B0" 2 35 "31752"
d G "PIN_B1" 2 36 "31753"
d G "PIN_B2" 2 37 "31754"
d G "PIN_B3" 2 38 "31755"
d G "PIN_B4" 2 39 "31756"
d G "PIN_B5" 2 40 "31757"
d G "PIN_B6" 2 41 "31758"
d G "PIN_B7" 2 42 "31759"
d G "PIN_C0" 2 44 "31760"
d G "PIN_C1" 2 45 "31761"
d G "PIN_C2" 2 46 "31762"
d G "PIN_C3" 2 47 "31763"
d G "PIN_C4" 2 48 "31764"
d G "PIN_C5" 2 49 "31765"
d G "PIN_C6" 2 50 "31766"
d G "PIN_C7" 2 51 "31767"
d G "PIN_E3" 2 53 "31779"
d G "FALSE" 2 56 "0"
d G "TRUE" 2 57 "1"
d G "BYTE" 2 59 "int8"
d G "BOOLEAN" 2 60 "int1"
d G "getc" 2 62 "getch"
d G "fgetc" 2 63 "getch"
d G "getchar" 2 64 "getch"
d G "putc" 2 65 "putchar"
d G "fputc" 2 66 "putchar"
d G "fgets" 2 67 "gets"
d G "fputs" 2 68 "puts"
d G "WDT_TIMEOUT" 2 74 "7"
d G "MCLR_FROM_SLEEP" 2 75 "11"
d G "MCLR_FROM_RUN" 2 76 "15"
d G "NORMAL_POWER_UP" 2 77 "12"
d G "BROWNOUT_RESTART" 2 78 "14"
d G "WDT_FROM_SLEEP" 2 79 "3"
d G "RESET_INSTRUCTION" 2 80 "0"
d G "RTCC_INTERNAL" 2 87 "0"
d G "RTCC_EXT_L_TO_H" 2 88 "32"
d G "RTCC_EXT_H_TO_L" 2 89 "48"
d G "RTCC_DIV_1" 2 91 "8"
d G "RTCC_DIV_2" 2 92 "0"
d G "RTCC_DIV_4" 2 93 "1"
d G "RTCC_DIV_8" 2 94 "2"
d G "RTCC_DIV_16" 2 95 "3"
d G "RTCC_DIV_32" 2 96 "4"
d G "RTCC_DIV_64" 2 97 "5"
d G "RTCC_DIV_128" 2 98 "6"
d G "RTCC_DIV_256" 2 99 "7"
d G "RTCC_OFF" 2 101 "0x80"
d G "RTCC_8_BIT" 2 103 "0x40"
d G "WDT_ON" 2 114 "0x100"
d G "WDT_OFF" 2 115 "0"
d G "T1_DISABLED" 2 121 "0"
d G "T1_INTERNAL" 2 122 "0x85"
d G "T1_EXTERNAL" 2 123 "0x87"
d G "T1_EXTERNAL_SYNC" 2 124 "0x83"
d G "T1_CLK_OUT" 2 126 "8"
d G "T1_DIV_BY_1" 2 128 "0"
d G "T1_DIV_BY_2" 2 129 "0x10"
d G "T1_DIV_BY_4" 2 130 "0x20"
d G "T1_DIV_BY_8" 2 131 "0x30"
d G "T2_DISABLED" 2 136 "0"
d G "T2_DIV_BY_1" 2 137 "4"
d G "T2_DIV_BY_4" 2 138 "5"
d G "T2_DIV_BY_16" 2 139 "6"
d G "T3_DISABLED" 2 145 "0"
d G "T3_INTERNAL" 2 146 "0x85"
d G "T3_EXTERNAL" 2 147 "0x87"
d G "T3_EXTERNAL_SYNC" 2 148 "0x83"
d G "T3_DIV_BY_1" 2 150 "0"
d G "T3_DIV_BY_2" 2 151 "0x10"
d G "T3_DIV_BY_4" 2 152 "0x20"
d G "T3_DIV_BY_8" 2 153 "0x30"
d G "CCP_OFF" 2 159 "0"
d G "CCP_CAPTURE_FE" 2 160 "4"
d G "CCP_CAPTURE_RE" 2 161 "5"
d G "CCP_CAPTURE_DIV_4" 2 162 "6"
d G "CCP_CAPTURE_DIV_16" 2 163 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 164 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 165 "9"
d G "CCP_COMPARE_INT" 2 166 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 167 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 168 "0xB"
d G "CCP_PWM" 2 169 "0xC"
d G "CCP_PWM_PLUS_1" 2 170 "0x1c"
d G "CCP_PWM_PLUS_2" 2 171 "0x2c"
d G "CCP_PWM_PLUS_3" 2 172 "0x3c"
d G "CCP_USE_TIMER3" 2 173 "0x100"
v G "CCP_1" 2 174 "int16"
v G "CCP_2" 2 178 "int16"
d G "SPI_MASTER" 2 185 "0x20"
d G "SPI_SLAVE" 2 186 "0x24"
d G "SPI_L_TO_H" 2 187 "0"
d G "SPI_H_TO_L" 2 188 "0x10"
d G "SPI_CLK_DIV_4" 2 189 "0"
d G "SPI_CLK_DIV_16" 2 190 "1"
d G "SPI_CLK_DIV_64" 2 191 "2"
d G "SPI_CLK_T2" 2 192 "3"
d G "SPI_SS_DISABLED" 2 193 "1"
d G "SPI_SAMPLE_AT_END" 2 195 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 196 "0x4000"
d G "UART_ADDRESS" 2 202 "2"
d G "UART_DATA" 2 203 "4"
d G "UART_AUTODETECT" 2 204 "8"
d G "UART_AUTODETECT_NOWAIT" 2 205 "9"
d G "UART_WAKEUP_ON_RDA" 2 206 "10"
d G "UART_SEND_BREAK" 2 207 "13"
d G "A0_A3_A1_A3" 2 211 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 2 212 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 2 213 "0xbcf05"
d G "NC_NC_NC_NC" 2 214 "0x0ff07"
d G "A0_A3_A1_A2" 2 215 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 2 216 "0x9ef01"
d G "A0_VR_A1_VR" 2 217 "0x3ff06"
d G "A3_VR_A2_VR" 2 218 "0xcff0e"
d G "CP1_INVERT" 2 219 "0x0000010"
d G "CP2_INVERT" 2 220 "0x0000020"
d G "VREF_LOW" 2 228 "0xa0"
d G "VREF_HIGH" 2 229 "0x80"
d G "VREF_F5" 2 231 "0x40"
d G "VREF_COMP" 2 232 "0x10"
d G "LVD_LVDIN" 2 237 "0x1F"
d G "LVD_45" 2 238 "0x1E"
d G "LVD_42" 2 239 "0x1D"
d G "LVD_40" 2 240 "0x1C"
d G "LVD_38" 2 241 "0x1B"
d G "LVD_36" 2 242 "0x1A"
d G "LVD_35" 2 243 "0x19"
d G "LVD_33" 2 244 "0x18"
d G "LVD_30" 2 245 "0x17"
d G "LVD_28" 2 246 "0x16"
d G "LVD_27" 2 247 "0x15"
d G "LVD_25" 2 248 "0x14"
d G "LVD_24" 2 249 "0x13"
d G "LVD_23" 2 250 "0x12"
d G "LVD_22" 2 251 "0x11"
d G "LVD_21" 2 252 "0x10"
d G "LVD_TRIGGER_BELOW" 2 254 "0"
d G "LVD_TRIGGER_ABOVE" 2 255 "0x80"
d G "OSC_31KHZ" 2 261 "0"
d G "OSC_125KHZ" 2 262 "0x10"
d G "OSC_250KHZ" 2 263 "0x20"
d G "OSC_500KHZ" 2 264 "0x30"
d G "OSC_1MHZ" 2 265 "0x40"
d G "OSC_2MHZ" 2 266 "0x50"
d G "OSC_4MHZ" 2 267 "0x60"
d G "OSC_8MHZ" 2 268 "0x70"
d G "OSC_16MHZ" 2 269 "0x4060"
d G "OSC_32MHZ" 2 270 "0x4070"
d G "OSC_TIMER1" 2 272 "1"
d G "OSC_INTRC" 2 273 "2"
d G "OSC_NORMAL" 2 274 "0"
d G "OSC_IDLE_MODE" 2 276 "0x80"
d G "OSC_31250" 2 277 "0x8000"
d G "OSC_PLL_ON" 2 278 "0x4000"
d G "OSC_PLL_OFF" 2 279 "0"
d G "OSC_STATE_STABLE" 2 283 "4"
d G "OSC_STATE_EXT_RUNNING" 2 284 "8"
d G "ADC_OFF" 2 291 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 292 "0x100"
d G "ADC_CLOCK_DIV_4" 2 293 "0x04"
d G "ADC_CLOCK_DIV_8" 2 294 "0x01"
d G "ADC_CLOCK_DIV_16" 2 295 "0x05"
d G "ADC_CLOCK_DIV_32" 2 296 "0x02"
d G "ADC_CLOCK_DIV_64" 2 297 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 298 "0x07" "Internal 2-6us"
d G "NO_ANALOGS" 2 301 "0x0F" "None"
d G "ALL_ANALOG" 2 302 "0x00" "A0 A1 A2 A3 A5 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 2 303 "0x03" "A0 A1 A2 A3 A5 B2 B3 B1 B4"
d G "AN0_TO_AN10" 2 304 "0x04" "A0 A1 A2 A3 A5 B2 B3 B1"
d G "AN0_TO_AN9" 2 305 "0x05" "A0 A1 A2 A3 A5 B2 B3"
d G "AN0_TO_AN8" 2 306 "0x06" "A0 A1 A2 A3 A5 B2"
d G "AN0_TO_AN4" 2 307 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 308 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 309 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 310 "0x0D" "A0 A1"
d G "AN0" 2 311 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 2 312 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 2 313 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 2 314 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 2 315 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 2 316 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 2 317 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 2 318 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 2 319 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 2 320 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 2 323 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 324 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 325 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 326 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 330 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 331 "1"
d G "ADC_READ_ONLY" 2 332 "6"
d G "L_TO_H" 2 344 "0x40"
d G "H_TO_L" 2 345 "0"
d G "GLOBAL" 2 347 "0xF2C0"
d G "INT_RTCC" 2 348 "0xF220"
d G "INT_TIMER0" 2 349 "0xF220"
d G "INT_TIMER1" 2 350 "0x9D01"
d G "INT_TIMER2" 2 351 "0x9D02"
d G "INT_TIMER3" 2 352 "0xA002"
d G "INT_EXT" 2 353 "0xF210"
d G "INT_EXT1" 2 354 "0xF008"
d G "INT_EXT2" 2 355 "0xF010"
d G "INT_RB" 2 356 "0xFFF208"
d G "INT_AD" 2 357 "0x9D40"
d G "INT_RDA" 2 358 "0x9D20"
d G "INT_TBE" 2 359 "0x9D10"
d G "INT_SSP" 2 360 "0x9D08"
d G "INT_CCP1" 2 361 "0x9D04"
d G "INT_CCP2" 2 362 "0xA001"
d G "INT_BUSCOL" 2 363 "0xA008"
d G "INT_LOWVOLT" 2 364 "0xA004"
d G "INT_COMP" 2 365 "0xA040"
d G "INT_EEPROM" 2 366 "0xA010"
d G "INT_OSCF" 2 367 "0xA080"
d G "INT_USB" 2 368 "0xA020"
D G "LOADER_SIZE" 3 25 " (0x17FF)"
D G "LOC_IN_LOADER_FLAG" 3 30 "0x25"
V G "g_InBootloader" 3 36 "int8"
D G "LOADER_START" 3 39 " (0)"
D G "LOADER_END" 3 40 " (LOADER_SIZE)"
D G "APPLICATION_START" 3 41 " (LOADER_SIZE+1)"
D G "APPLICATION_END" 3 42 " (getenv("PROGRAM_MEMORY")-1)"
D G "APPLICATION_ISR" 3 43 " (APPLICATION_START+8)"
D G "usb_cdc_kbhit" 4 117 "() (usb_cdc_get_buffer_status.got)"
D G "usb_cdc_putready" 4 118 "() (usb_cdc_put_buffer_nextin<USB_CDC_DATA_IN_SIZE)"
D G "usb_cdc_connected" 4 119 "() (usb_cdc_got_set_line_coding)"
V L "c" 4 120 "int8"
F G "usb_cdc_putc_fast" 4 120 "void(int8 c)"
F G "usb_cdc_getc" 4 121 "int8()"
V L "c" 4 122 "int8"
F G "usb_cdc_putc" 4 122 "void(int8 c)" "input.c ported to use CDC:"
F G "get_float_usb" 4 125 "float()"
F G "get_long_usb" 4 126 "sint16()"
F G "get_int_usb" 4 127 "sint8()"
V L "s" 4 128 "*int8"
V L "max" 4 128 "int8"
F G "get_string_usb" 4 128 "void(*int8 s,int8 max)"
F G "gethex_usb" 4 129 "int8()"
F G "gethex1_usb" 4 130 "int8()" "functions automatically called by USB handler code"
F G "usb_isr_tkn_cdc" 4 133 "void()"
F G "usb_cdc_init" 4 134 "void()"
F G "usb_isr_tok_out_cdc_control_dne" 4 135 "void()"
F G "usb_isr_tok_in_cdc_data_dne" 4 136 "void()"
F G "usb_isr_tok_out_cdc_data_dne" 4 137 "void()"
F G "usb_cdc_flush_out_buffer" 4 139 "void()" "Tells the CCS PIC USB firmware to include HID handling code."
D G "USB_HID_DEVICE" 4 142 "FALSE"
D G "USB_CDC_DEVICE" 4 143 "TRUE"
D G "USB_CDC_COMM_IN_ENDPOINT" 4 145 "1"
D G "USB_CDC_COMM_IN_SIZE" 4 146 "8"
D G "USB_EP1_TX_ENABLE" 4 147 "USB_ENABLE_INTERRUPT"
D G "USB_EP1_TX_SIZE" 4 148 "USB_CDC_COMM_IN_SIZE"
D G "USB_CDC_DATA_IN_ENDPOINT" 4 151 "2"
D G "USB_CDC_DATA_IN_SIZE" 4 152 "64"
D G "USB_EP2_TX_ENABLE" 4 153 "USB_ENABLE_BULK"
D G "USB_EP2_TX_SIZE" 4 154 "USB_CDC_DATA_IN_SIZE"
D G "USB_CDC_DATA_OUT_ENDPOINT" 4 157 "2"
D G "USB_CDC_DATA_OUT_SIZE" 4 158 "64"
D G "USB_EP2_RX_ENABLE" 4 159 "USB_ENABLE_BULK"
D G "USB_EP2_RX_SIZE" 4 160 "USB_CDC_DATA_OUT_SIZE"
D G "__USB_PIC_PERIF__" 4 169 "1"
D G "__USB_HARDWARE__" 5 154 ""
D G "__PIC__" 5 157 "1"
D G "__USB_4550__" 5 171 ""
D G "USB_TOTAL_BUFFER_SPACE" 5 172 " ((int16)0x300)"
D G "USB_MAX_NUM_ENDPOINTS" 5 173 "16"
D G "USB_USE_FULL_SPEED" 5 177 "TRUE"
D G "USB_CON_SENSE_PIN" 5 181 "0"
D G "USB_MAX_EP0_PACKET_LENGTH" 5 192 "64"
D G "__USB_PROTOTYPES__" 6 169 ""
D G "USB_HID_BOOT_PROTOCOL" 6 172 "FALSE"
D G "USB_HID_IDLE" 6 176 "FALSE"
D G "USB_OPT_FOR_ROM" 6 189 "TRUE" "set to false to opt for less RAM, true to opt for less ROM"
D G "USB_NUM_CONFIGURATIONS" 6 197 "1" "DO NOT CHANGE"
D G "PID_IN" 6 200 "0x09" "device to host transactions"
D G "PID_OUT" 6 201 "0x01" "host to device transactions"
D G "PID_SETUP" 6 202 "0x0D" "host to device setup transaction"
D G "PID_ACK" 6 203 "0x02" "receiver accepts error-free data packet"
D G "PID_DATA0" 6 204 "0x03" "data packet with even sync bit"
D G "PID_SOF" 6 205 "0x05" "start of framer marker and frame number"
D G "PID_NAK" 6 206 "0x0A" "receiver can't accept data or sender cant send data or has no data to transmit"
D G "PID_DATA1" 6 207 "0x0B" "data packet with odd sync bit"
D G "PID_PRE" 6 208 "0x0C" "preamble issued by host.  enables downstream traffic to low-speed device"
D G "PID_STALL" 6 209 "0x0E" "a control request isnt supported or the endpoint is halted"
D G "USB_DESC_DEVICE_TYPE" 6 212 "0x01" "#DEFINE USB_DEVICE_DESC_KEY      0x01"
D G "USB_DESC_CONFIG_TYPE" 6 213 "0x02" "#DEFINE USB_CONFIG_DESC_KEY      0x02"
D G "USB_DESC_STRING_TYPE" 6 214 "0x03" "#DEFINE USB_STRING_DESC_KEY      0x03"
D G "USB_DESC_INTERFACE_TYPE" 6 215 "0x04" "#DEFINE USB_INTERFACE_DESC_KEY   0x04"
D G "USB_DESC_ENDPOINT_TYPE" 6 216 "0x05" "#DEFINE USB_ENDPOINT_DESC_KEY    0x05"
D G "USB_DESC_CLASS_TYPE" 6 217 "0x21" "#DEFINE USB_CLASS_DESC_KEY       0x21"
D G "USB_DESC_HIDREPORT_TYPE" 6 218 "0x22"
D G "USB_DESC_DEVICE_LEN" 6 221 "18" "#DEFINE USB_DEVICE_DESC_LEN      18"
D G "USB_DESC_CONFIG_LEN" 6 222 "9" "#DEFINE USB_CONFIG_DESC_LEN      9"
D G "USB_DESC_INTERFACE_LEN" 6 223 "9" "#DEFINE USB_INTERFACE_DESC_LEN   9"
D G "USB_DESC_CLASS_LEN" 6 224 "9" "#DEFINE USB_CLASS_DESC_LEN       9"
D G "USB_DESC_ENDPOINT_LEN" 6 225 "7" "#DEFINE USB_ENDPOINT_DESC_LEN    7"
D G "USB_STANDARD_REQUEST_GET_STATUS" 6 228 "0x00"
D G "USB_STANDARD_REQUEST_CLEAR_FEATURE" 6 229 "0x01"
D G "USB_STANDARD_REQUEST_SET_FEATURE" 6 230 "0x03"
D G "USB_STANDARD_REQUEST_SET_ADDRESS" 6 231 "0x05"
D G "USB_STANDARD_REQUEST_GET_DESCRIPTOR" 6 232 "0x06"
D G "USB_STANDARD_REQUEST_SET_DESCRIPTOR" 6 233 "0x07"
D G "USB_STANDARD_REQUEST_GET_CONFIGURATION" 6 234 "0x08"
D G "USB_STANDARD_REQUEST_SET_CONFIGURATION" 6 235 "0x09"
D G "USB_STANDARD_REQUEST_GET_INTERFACE" 6 236 "0x0A"
D G "USB_STANDARD_REQUEST_SET_INTERFACE" 6 237 "0x0B"
D G "USB_STANDARD_REQUEST_SYNCH_FRAME" 6 238 "0x0C"
D G "USB_HID_REQUEST_GET_REPORT" 6 241 "0x01"
D G "USB_HID_REQUEST_GET_IDLE" 6 242 "0x02"
D G "USB_HID_REQUEST_GET_PROTOCOL" 6 243 "0x03"
D G "USB_HID_REQUEST_SET_REPORT" 6 244 "0x09"
D G "USB_HID_REQUEST_SET_IDLE" 6 245 "0x0A"
D G "USB_HID_REQUEST_SET_PROTOCOL" 6 246 "0x0B"
D G "USB_ENDPOINT_TYPE_CONTROL" 6 249 "0x00"
D G "USB_ENDPOINT_TYPE_ISOCHRONOUS" 6 250 "0x01"
D G "USB_ENDPOINT_TYPE_BULK" 6 251 "0x02"
D G "USB_ENDPOINT_TYPE_INTERRUPT" 6 252 "0x03"
D G "USB_ENABLE_DISABLED" 6 255 "0"
D G "USB_ENABLE_BULK" 6 256 "0x01"
D G "USB_ENABLE_ISOCHRONOUS" 6 257 "0x02"
D G "USB_ENABLE_INTERRUPT" 6 258 "0x03"
D G "USB_ENABLE_CONTROL" 6 259 "0x04"
C L "usb_cdc_flush_out_buffer" 6 2 1 "FUNCTION"
C L "usb_cdc_flush_out_buffer" 6 2 1 "FUNCTION"
C L "usb_cdc_flush_out_buffer" 6 2 1 "FUNCTION"
C L "usb_cdc_flush_out_buffer" 6 2 1 "FUNCTION"
C L "usb_cdc_flush_out_buffer" 6 2 1 "FUNCTION"
V G "USB_stack_status" 6 276 "{USB_STATES dev_req,int8 curr_config,int8 status_device,USB_GETDESC_TYPES getdesc_type}"
V G "__usb_kbhit_status" 6 286 "int16" "/ *** User function prototypes"
F G "usb_wait_for_enumeration" 6 289 "void()"
F G "usb_unermated" 6 290 "int8()"
V L "endpoint" 6 291 "int8"
V L "ptr" 6 291 "*int8"
V L "max" 6 291 "int16"
V L "timeout" 6 291 "int16"
F G "usb_gets" 6 291 "int8(int8 endpoint,*int8 ptr,int16 max,int16 timeout)"
V L "endpoint" 6 292 "int8"
V L "ptr" 6 292 "*int8"
V L "len" 6 292 "int16"
V L "timeout" 6 292 "int8"
F G "usb_puts" 6 292 "int8(int8 endpoint,*int8 ptr,int16 len,int8 timeout)" "/ *** Token and request hanlder function prototypes"
F G "usb_token_reset" 6 295 "void()"
F G "usb_put_0len_0" 6 297 "void()"
V L "len" 6 298 "int8"
F G "usb_request_send_response" 6 298 "void(int8 len)" "always sends usb_ep0_rx_buffer[] to endpoint 0 with a toggle of DATA"
V L "endpoint" 6 300 "int8"
V L "status" 6 300 "*int16"
V L "buffer" 6 300 "*int16"
V L "size" 6 300 "*int8"
F G "usb_match_registers" 6 300 "void(int8 endpoint,*int16 status,*int16 buffer,*int8 size)"
V L "endpoint" 6 302 "int8"
F G "usb_isr_tok_in_dne" 6 302 "void(int8 endpoint)"
V L "endpoint" 6 303 "int8"
F G "usb_isr_tok_out_dne" 6 303 "void(int8 endpoint)"
F G "usb_isr_tok_setup_dne" 6 304 "void()"
F G "usb_isr_tkn_setup_StandardEndpoint" 6 306 "void()"
F G "usb_isr_tkn_setup_StandardDevice" 6 307 "void()"
F G "usb_isr_tkn_setup_StandardInterface" 6 308 "void()"
F G "usb_Get_Descriptor" 6 314 "void()"
F G "usb_copy_desc_seg_to_ep" 6 315 "void()"
F G "usb_finish_set_address" 6 317 "void()" "*** ENABLE RX ENDPOINTS AND BUFFERS"
D G "USB_EP0_TX_ENABLE" 6 322 "USB_ENABLE_CONTROL"
D G "USB_EP0_RX_ENABLE" 6 323 "USB_ENABLE_CONTROL"
D G "USB_EP0_RX_SIZE" 6 324 "USB_MAX_EP0_PACKET_LENGTH" "endpoint 0 is setup, and should always be the MAX_PACKET_LENGTH.  Slow speed specifies 8"
D G "USB_EP0_TX_SIZE" 6 325 "USB_MAX_EP0_PACKET_LENGTH" "endpoint 0 is setup, and should always be the MAX_PACKET_LENGTH.  Slow speed specifies 8"
D G "USB_EP1_RX_ENABLE" 6 332 "USB_ENABLE_DISABLED"
D G "USB_EP1_RX_SIZE" 6 339 "0"
D G "USB_EP3_TX_ENABLE" 6 391 "USB_ENABLE_DISABLED"
D G "USB_EP3_RX_ENABLE" 6 394 "USB_ENABLE_DISABLED"
D G "USB_EP3_RX_SIZE" 6 401 "0"
D G "USB_EP3_TX_SIZE" 6 412 "0"
D G "USB_EP4_TX_ENABLE" 6 422 "USB_ENABLE_DISABLED"
D G "USB_EP4_RX_ENABLE" 6 425 "USB_ENABLE_DISABLED"
D G "USB_EP4_RX_SIZE" 6 432 "0"
D G "USB_EP4_TX_SIZE" 6 443 "0"
D G "USB_EP5_TX_ENABLE" 6 453 "USB_ENABLE_DISABLED"
D G "USB_EP5_RX_ENABLE" 6 456 "USB_ENABLE_DISABLED"
D G "USB_EP5_RX_SIZE" 6 463 "0"
D G "USB_EP5_TX_SIZE" 6 474 "0"
D G "USB_EP6_TX_ENABLE" 6 484 "USB_ENABLE_DISABLED"
D G "USB_EP6_RX_ENABLE" 6 487 "USB_ENABLE_DISABLED"
D G "USB_EP6_RX_SIZE" 6 494 "0"
D G "USB_EP6_TX_SIZE" 6 505 "0"
D G "USB_EP7_TX_ENABLE" 6 515 "USB_ENABLE_DISABLED"
D G "USB_EP7_RX_ENABLE" 6 518 "USB_ENABLE_DISABLED"
D G "USB_EP7_RX_SIZE" 6 525 "0"
D G "USB_EP7_TX_SIZE" 6 536 "0"
D G "USB_EP8_TX_ENABLE" 6 546 "USB_ENABLE_DISABLED"
D G "USB_EP8_RX_ENABLE" 6 549 "USB_ENABLE_DISABLED"
D G "USB_EP8_RX_SIZE" 6 556 "0"
D G "USB_EP8_TX_SIZE" 6 567 "0"
D G "USB_EP9_TX_ENABLE" 6 577 "USB_ENABLE_DISABLED"
D G "USB_EP9_RX_ENABLE" 6 580 "USB_ENABLE_DISABLED"
D G "USB_EP9_RX_SIZE" 6 587 "0"
D G "USB_EP9_TX_SIZE" 6 598 "0"
D G "USB_EP10_TX_ENABLE" 6 608 "USB_ENABLE_DISABLED"
D G "USB_EP10_RX_ENABLE" 6 611 "USB_ENABLE_DISABLED"
D G "USB_EP10_RX_SIZE" 6 618 "0"
D G "USB_EP10_TX_SIZE" 6 629 "0"
D G "USB_EP11_TX_ENABLE" 6 639 "USB_ENABLE_DISABLED"
D G "USB_EP11_RX_ENABLE" 6 642 "USB_ENABLE_DISABLED"
D G "USB_EP11_RX_SIZE" 6 649 "0"
D G "USB_EP11_TX_SIZE" 6 660 "0"
D G "USB_EP12_TX_ENABLE" 6 670 "USB_ENABLE_DISABLED"
D G "USB_EP12_RX_ENABLE" 6 673 "USB_ENABLE_DISABLED"
D G "USB_EP12_RX_SIZE" 6 680 "0"
D G "USB_EP12_TX_SIZE" 6 691 "0"
D G "USB_EP13_TX_ENABLE" 6 701 "USB_ENABLE_DISABLED"
D G "USB_EP13_RX_ENABLE" 6 704 "USB_ENABLE_DISABLED"
D G "USB_EP13_RX_SIZE" 6 711 "0"
D G "USB_EP13_TX_SIZE" 6 722 "0"
D G "USB_EP14_TX_ENABLE" 6 732 "USB_ENABLE_DISABLED"
D G "USB_EP14_RX_ENABLE" 6 735 "USB_ENABLE_DISABLED"
D G "USB_EP14_RX_SIZE" 6 742 "0"
D G "USB_EP14_TX_SIZE" 6 753 "0"
D G "USB_EP15_TX_ENABLE" 6 763 "USB_ENABLE_DISABLED"
D G "USB_EP15_RX_ENABLE" 6 766 "USB_ENABLE_DISABLED"
D G "USB_EP15_RX_SIZE" 6 773 "0"
D G "USB_EP15_TX_SIZE" 6 784 "0"
V G "usb_ep_tx_type" 6 791 "int8[16]"
V G "usb_ep_rx_type" 6 800 "int8[16]"
V G "usb_ep_tx_size" 6 809 "int16[16]"
V G "usb_ep_rx_size" 6 818 "int16[16]"
D G "USB_BUFFER_NEEDED" 5 198 " (USB_EP0_TX_SIZE+USB_EP0_RX_SIZE+USB_EP1_TX_SIZE+USB_EP1_RX_SIZE+USB_EP2_TX_SIZE+USB_EP2_RX_SIZE+USB_EP3_TX_SIZE+USB_EP3_RX_SIZE+USB_EP4_TX_SIZE+USB_EP4_RX_SIZE+USB_EP5_TX_SIZE+USB_EP5_RX_SIZE+USB_EP6_TX_SIZE+USB_EP6_RX_SIZE+USB_EP7_TX_SIZE+USB_EP7_RX_SIZE+USB_EP8_TX_SIZE+USB_EP8_RX_SIZE+USB_EP9_TX_SIZE+USB_EP9_RX_SIZE+USB_EP10_TX_SIZE+USB_EP10_RX_SIZE+USB_EP11_TX_SIZE+USB_EP11_RX_SIZE+USB_EP12_TX_SIZE+USB_EP12_RX_SIZE+USB_EP13_TX_SIZE+USB_EP13_RX_SIZE+USB_EP14_TX_SIZE+USB_EP14_RX_SIZE+USB_EP15_TX_SIZE+USB_EP15_RX_SIZE)"
D G "debug_usb" 5 210 "(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)"
D G "debug_display_ram" 5 213 "(x,y)"
D G "USB_IGNORE_RX_DTS" 5 232 "FALSE"
D G "USB_IGNORE_TX_DTS" 5 236 "FALSE"
D G "USB_USE_ERROR_COUNTER" 5 242 "FALSE"
D G "USB_PING_PONG_MODE_OFF" 5 245 "0" "no ping pong"
D G "USB_PING_PONG_MODE_E0" 5 246 "1" "ping pong endpoint 0 only"
D G "USB_PING_PONG_MODE_ON" 5 247 "2" "ping pong all endpoints"
D G "USB_PING_PONG_MODE" 5 251 "USB_PING_PONG_MODE_OFF"
C L "usb_finish_set_address" 5 211 1 "FUNCTION"
D G "UEP0_LOC" 5 270 "0xF70"
D G "USB_BUFFER" 5 291 "0x500"
D G "BD0STAT_LOC" 5 299 "0x400"
D G "BD0CNT_LOC" 5 300 "0x401"
D G "BD0ADRL_LOC" 5 301 "0x402"
D G "BD0ADRH_LOC" 5 302 "0x403"
D G "UEP" 5 304 "(x) *(UEP0_LOC+x)"
D G "EP_BDxST_O" 5 330 "(x)    *(BD0STAT_LOC + x*8)"
D G "EP_BDxCNT_O" 5 331 "(x)    *(BD0CNT_LOC + x*8)"
D G "EP_BDxADR_O" 5 332 "(x)   *(int16 *)(BD0ADRL_LOC + x*8)"
D G "EP_BDxST_I" 5 333 "(x)    *(BD0STAT_LOC + 4 + x*8)"
D G "EP_BDxCNT_I" 5 334 "(x)    *(BD0CNT_LOC + 4 + x*8)"
D G "EP_BDxADR_I" 5 335 "(x)   *(int16 *)(BD0ADRL_LOC + 4 + x*8)"
D G "ENDPT_DISABLED" 5 341 "0x00" "endpoint not used"
D G "ENDPT_IN_ONLY" 5 342 "0x02" "endpoint supports IN transactions only"
D G "ENDPT_OUT_ONLY" 5 343 "0x04" "endpoint supports OUT transactions only"
D G "ENDPT_CONTROL" 5 344 "0x06" "Supports IN, OUT and CONTROL transactions - Only use with EP0"
D G "ENDPT_NON_CONTROL" 5 345 "0x0E" "Supports both IN and OUT transactions"
C L "usb_finish_set_address" 5 211 1 "FUNCTION"
V G "usb_state" 5 349 ""
D G "USB_PIC_PID_IN" 5 352 "0x24" "device to host transactions"
D G "USB_PIC_PID_OUT" 5 353 "0x04" "host to device transactions"
D G "USB_PIC_PID_SETUP" 5 354 "0x34" "host to device setup transaction"
D G "USTAT_IN_E0" 5 356 "4"
D G "USTAT_OUT_SETUP_E0" 5 357 "0"
D G "__USB_UIF_RESET" 5 359 "0x01"
D G "__USB_UIF_ERROR" 5 360 "0x02"
D G "__USB_UIF_ACTIVE" 5 361 "0x04"
D G "__USB_UIF_TOKEN" 5 362 "0x08"
D G "__USB_UIF_IDLE" 5 363 "0x10"
D G "__USB_UIF_STALL" 5 364 "0x20"
D G "__USB_UIF_SOF" 5 365 "0x40"
D G "STANDARD_INTS" 5 370 "0x3D"
D G "__USB_UCFG_UTEYE" 5 373 "0x80"
D G "__USB_UCFG_UOEMON" 5 375 "0x40"
D G "__USB_UCFG_UPUEN" 5 377 "0x10"
D G "__USB_UCFG_UTRDIS" 5 378 "0x08"
D G "__USB_UCFG_FSEN" 5 379 "0x04"
D G "__UCFG_VAL_ENABLED__" 5 382 " (__USB_UCFG_UPUEN | __USB_UCFG_FSEN | USB_PING_PONG_MODE)"
D G "__UCFG_VAL_DISABLED__" 5 387 "0x08"
V G "usb_ep0_rx_buffer" 5 389 "int8[64]"
V G "usb_ep0_tx_buffer" 5 392 "int8[64]"
V G "usb_data_buffer" 5 395 "int8[640]"
V G "__setup_0_tx_size" 5 398 "int8" "interrupt handler, specific to PIC18Fxx5x peripheral only"
F G "usb_handle_interrupt" 5 401 "void()"
F G "usb_isr_rst" 5 402 "void()"
F G "usb_isr_uerr" 5 403 "void()"
F G "usb_isr_sof" 5 404 "void()"
F G "usb_isr_activity" 5 405 "void()"
F G "usb_isr_uidle" 5 406 "void()"
F G "usb_isr_tok_dne" 5 407 "void()"
F G "usb_isr_stall" 5 408 "void()"
F G "usb_init_ep0_setup" 5 409 "void()" "following functions standard part of CCS PIC USB driver, and used by usb.c"
F G "usb_init" 5 412 "void()"
F G "usb_detach" 5 413 "void()"
V L "endpoint" 5 414 "int8"
V L "ptr" 5 414 "*int8"
V L "len" 5 414 "int16"
V L "tgl" 5 414 "USB_DTS_BIT"
F G "usb_put_packet" 5 414 "int8(int8 endpoint,*int8 ptr,int16 len,USB_DTS_BIT tgl)"
V L "endpoint" 5 415 "int8"
V L "len" 5 415 "int16"
V L "tgl" 5 415 "USB_DTS_BIT"
F G "usb_flush_in" 5 415 "int8(int8 endpoint,int16 len,USB_DTS_BIT tgl)" "marks the transmit buffer as ready for transmission"
V L "endpoint" 5 416 "int8"
V L "ptr" 5 416 "*int8"
V L "max" 5 416 "int16"
F G "usb_get_packet" 5 416 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "endpoint" 5 417 "int8"
F G "usb_rx_packet_size" 5 417 "int16(int8 endpoint)"
V L "endpoint" 5 418 "int8"
V L "ptr" 5 418 "*int8"
V L "max" 5 418 "int16"
F G "usb_get_packet_buffer" 5 418 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "endpoint" 5 419 "int8"
V L "tgl" 5 419 "USB_DTS_BIT"
F G "usb_flush_out" 5 419 "void(int8 endpoint,USB_DTS_BIT tgl)"
V L "endpoint" 5 420 "int8"
F G "usb_stall_ep" 5 420 "void(int8 endpoint)"
V L "endpoint" 5 421 "int8"
F G "usb_unstall_ep" 5 421 "void(int8 endpoint)"
V L "endpoint" 5 422 "int8"
F G "usb_endpoint_stalled" 5 422 "int8(int8 endpoint)"
V L "address" 5 423 "int8"
F G "usb_set_address" 5 423 "void(int8 address)"
V L "config" 5 424 "int8"
F G "usb_set_configured" 5 424 "void(int8 config)"
F G "usb_disable_endpoints" 5 425 "void()" "BEGIN User Functions:"
D G "usb_attached" 5 438 "() TRUE"
C L "usb_disable_endpoints" 5 211 5 "FUNCTION"
F G "usb_detach" 5 447 "void()" "done"
C L "usb_detach" 5 211 1 "FUNCTION"
C L "usb_detach" 5 211 1 "FUNCTION"
C L "usb_detach" 5 211 1 "FUNCTION"
C L "usb_attach" 5 211 7 "FUNCTION"
F G "usb_attach" 5 465 "void()"
C L "usb_attach" 5 211 1 "FUNCTION"
C L "usb_attach" 5 211 1 "FUNCTION"
C L "usb_attach" 5 211 1 "FUNCTION"
D G "usb_init_cs" 5 487 "usb_detach"
C L "usb_task" 5 211 13 "FUNCTION"
F G "usb_task" 5 503 "void()"
C L "usb_task" 5 211 1 "FUNCTION"
C L "usb_init" 5 211 15 "FUNCTION"
F G "usb_init" 5 544 "void()"
C L "usb_flush_in" 5 211 12 "FUNCTION"
V L "endpoint" 5 566 "int8"
V L "len" 5 566 "int16"
V L "tgl" 5 566 "USB_DTS_BIT"
F G "usb_flush_in" 5 566 "int8(int8 endpoint,int16 len,USB_DTS_BIT tgl)"
V L "i" 5 567 "int8"
C L "usb_flush_in" 5 211 1 "FUNCTION"
C L "usb_flush_in" 5 211 1 "FUNCTION"
C L "usb_flush_in" 5 211 1 "FUNCTION"
C L "usb_flush_in" 5 211 1 "FUNCTION"
C L "usb_flush_in" 5 211 1 "FUNCTION"
C L "usb_flush_in" 5 211 1 "FUNCTION"
C L "usb_put_packet" 5 211 21 "FUNCTION"
V L "endpoint" 5 641 "int8"
V L "ptr" 5 641 "*int8"
V L "len" 5 641 "int16"
V L "tgl" 5 641 "USB_DTS_BIT"
F G "usb_put_packet" 5 641 "int8(int8 endpoint,*int8 ptr,int16 len,USB_DTS_BIT tgl)" "done"
V L "j" 5 642 "int16"
V L "i" 5 643 "int8"
V L "buff_add" 5 644 "*int8"
C L "usb_flush_out" 5 211 13 "FUNCTION"
V L "endpoint" 5 682 "int8"
V L "tgl" 5 682 "USB_DTS_BIT"
F G "usb_flush_out" 5 682 "void(int8 endpoint,USB_DTS_BIT tgl)"
V L "i" 5 683 "int8"
V L "len" 5 684 "int16"
C L "usb_flush_out" 5 211 1 "FUNCTION"
C L "usb_flush_out" 5 211 1 "FUNCTION"
C L "usb_flush_out" 5 211 1 "FUNCTION"
C L "usb_flush_out" 5 211 1 "FUNCTION"
C L "usb_flush_out" 5 211 1 "FUNCTION"
V L "endpoint" 5 726 "int8"
F G "usb_rx_packet_size" 5 726 "int16(int8 endpoint)"
C L "usb_get_packet_buffer" 5 211 14 "FUNCTION"
V L "endpoint" 5 745 "int8"
V L "ptr" 5 745 "*int8"
V L "max" 5 745 "int16"
F G "usb_get_packet_buffer" 5 745 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "al" 5 746 "*int8"
V L "st" 5 747 "int8"
V L "i" 5 748 "int16"
C L "usb_get_packet_buffer" 5 211 1 "FUNCTION"
C L "usb_get_packet" 5 211 17 "FUNCTION"
V L "endpoint" 5 790 "int8"
V L "ptr" 5 790 "*int8"
V L "max" 5 790 "int16"
F G "usb_get_packet" 5 790 "int16(int8 endpoint,*int8 ptr,int16 max)"
C L "usb_tbe" 5 211 11 "FUNCTION"
V L "endpoint" 5 810 "int8"
F G "usb_tbe" 5 810 "int8(int8 endpoint,*int8 ptr,int16 max)"
V L "st" 5 811 "int8"
C L "usb_stall_ep" 5 211 12 "FUNCTION"
V L "endpoint" 5 831 "int8"
F G "usb_stall_ep" 5 831 "void(int8 endpoint)" "done"
V L "direction" 5 832 "int1"
C L "usb_unstall_ep" 5 211 9 "FUNCTION"
V L "endpoint" 5 853 "int8"
F G "usb_unstall_ep" 5 853 "void(int8 endpoint)" "done"
V L "direction" 5 854 "int1"
C L "usb_endpoint_stalled" 5 211 14 "FUNCTION"
V L "endpoint" 5 884 "int8"
F G "usb_endpoint_stalled" 5 884 "int8(int8 endpoint)" "done"
V L "direction" 5 885 "int1"
V L "st" 5 886 "int8"
C L "usb_set_address" 5 211 8 "FUNCTION"
V L "address" 5 908 "int8"
F G "usb_set_address" 5 908 "void(int8 address)" "done"
C L "usb_set_configured" 5 211 11 "FUNCTION"
V L "config" 5 931 "int8"
F G "usb_set_configured" 5 931 "void(int8 config)"
V L "en" 5 932 "int8"
V L "addy" 5 933 "int16"
V L "new_uep" 5 934 "int8"
V L "len" 5 935 "int16"
V L "i" 5 936 "int8"
C L "usb_set_configured" 5 211 1 "FUNCTION"
C L "usb_set_configured" 5 211 1 "FUNCTION"
C L "usb_isr" 5 211 13 "FUNCTION"
F G "usb_isr" 5 995 "void()"
C L "usb_isr" 5 211 1 "FUNCTION"
C L "usb_isr" 5 211 1 "FUNCTION"
C L "usb_isr" 5 211 1 "FUNCTION"
C L "usb_isr" 5 211 1 "FUNCTION"
C L "usb_isr" 5 211 1 "FUNCTION"
C L "usb_isr" 5 211 1 "FUNCTION"
C L "usb_isr" 5 211 1 "FUNCTION"
C L "usb_isr" 5 211 1 "FUNCTION"
C L "usb_isr_sof" 5 211 1 "FUNCTION"
F G "usb_isr_sof" 5 1019 "void()"
C L "usb_disable_endpoints" 5 211 5 "FUNCTION"
F G "usb_disable_endpoints" 5 1030 "void()"
V L "i" 5 1031 "int8"
C L "usb_isr_rst" 5 211 6 "FUNCTION"
F G "usb_isr_rst" 5 1045 "void()"
C L "usb_isr_rst" 5 211 1 "FUNCTION"
C L "usb_isr_rst" 5 211 1 "FUNCTION"
C L "usb_isr_rst" 5 211 1 "FUNCTION"
C L "usb_init_ep0_setup" 5 211 5 "FUNCTION"
F G "usb_init_ep0_setup" 5 1078 "void()"
C L "usb_init_ep0_setup" 5 211 1 "FUNCTION"
C L "usb_isr_uerr" 5 211 7 "FUNCTION"
F G "usb_isr_uerr" 5 1099 "void()"
C L "usb_isr_uidle" 5 211 5 "FUNCTION"
F G "usb_isr_uidle" 5 1151 "void()"
C L "usb_isr_uidle" 5 211 1 "FUNCTION"
C L "usb_isr_uidle" 5 211 1 "FUNCTION"
C L "usb_isr_uidle" 5 211 1 "FUNCTION"
C L "usb_isr_activity" 5 211 6 "FUNCTION"
F G "usb_isr_activity" 5 1167 "void()"
C L "usb_isr_activity" 5 211 1 "FUNCTION"
C L "usb_isr_activity" 5 211 1 "FUNCTION"
C L "usb_isr_stall" 5 211 5 "FUNCTION"
F G "usb_isr_stall" 5 1181 "void()"
C L "usb_isr_tok_dne" 5 211 13 "FUNCTION"
F G "usb_isr_tok_dne" 5 1206 "void()"
V L "en" 5 1207 "int8"
C L "usb_isr_tok_dne" 5 211 1 "FUNCTION"
C L "usb_isr_tok_dne" 5 211 1 "FUNCTION"
C L "usb_isr_tok_dne" 5 211 3 "FUNCTION"
C L "usb_isr_tok_dne" 5 211 1 "FUNCTION"
C L "usb_isr_tok_dne" 5 211 1 "FUNCTION"
C L "usb_isr_tok_dne" 5 211 1 "FUNCTION"
C L "usb_request_send_response" 5 211 23 "FUNCTION"
V L "len" 5 1289 "int8"
F G "usb_request_send_response" 5 1289 "void(int8 len)"
F G "usb_request_get_data" 5 1293 "void(int8 len)"
F G "usb_request_stall" 5 1297 "void()"
D G "__USB_DESCRIPTORS__" 7 31 ""
D G "USB_TOTAL_CONFIG_LEN" 7 44 "67" "config+interface+class+endpoint+endpoint (2 endpoints)"
V G "USB_CONFIG_DESC" 7 46 "int8[1]" "IN ORDER TO COMPLY WITH WINDOWS HOSTS, THE ORDER OF THIS ARRAY MUST BE:"
D G "USB_MAX_NUM_INTERFACES" 7 144 "2"
V G "USB_NUM_INTERFACES" 7 147 "int8[1]"
V G "USB_CLASS_DESCRIPTORS" 7 154 "int16[1][2][4]" "config 1"
V G "USB_DEVICE_DESC" 7 176 "int8[18]" "starts of with device configuration. only one possible"
V G "USB_STRING_DESC_OFFSET" 7 206 "int8[1]"
V G "USB_STRING_DESC" 7 208 "int8[1]" "string 0"
D G "__USB_DRIVER__" 8 177 ""
V G "USB_address_pending" 8 189 "int8" "save previous state because packets can take several isrs"
V G "usb_getdesc_ptr" 8 190 "int8"
V G "usb_getdesc_len" 8 190 "int8"
V G "USB_Interface" 8 196 "int8[2]" "config state for all of our interfaces, NUM_INTERFACES defined with descriptors"
D G "usb_kbhit" 8 210 "(x) bit_test(__usb_kbhit_status,x)"
D G "usb_enumerated" 8 221 "() (USB_stack_status.curr_config)"
C L "usb_wait_for_enumeration" 8 190 6 "FUNCTION"
F G "usb_wait_for_enumeration" 8 230 "void()"
C L "usb_puts" 8 190 12 "FUNCTION"
V L "endpoint" 8 247 "int8"
V L "ptr" 8 247 "*int8"
V L "len" 8 247 "int16"
V L "timeout" 8 247 "int8"
F G "usb_puts" 8 247 "int8(int8 endpoint,*int8 ptr,int16 len,int8 timeout)"
V L "i" 8 248 "int16"
V L "res" 8 249 "int1"
V L "this_packet_len" 8 250 "int16"
V L "packet_size" 8 251 "int16"
V L "timeout_1us" 8 252 "int32"
C L "usb_puts" 8 190 1 "FUNCTION"
C L "usb_puts" 8 190 1 "FUNCTION"
C L "usb_puts" 8 190 1 "FUNCTION"
C L "usb_puts" 8 190 1 "FUNCTION"
C L "usb_gets" 8 190 17 "FUNCTION"
V L "endpoint" 8 305 "int8"
V L "ptr" 8 305 "*int8"
V L "max" 8 305 "int16"
V L "timeout" 8 305 "int16"
F G "usb_gets" 8 305 "int8(int8 endpoint,*int8 ptr,int16 max,int16 timeout)"
V L "ret" 8 306 "int16"
V L "to" 8 307 "int16"
V L "len" 8 308 "int16"
V L "packet_size" 8 309 "int16"
V L "this_packet_max" 8 310 "int16"
C L "usb_token_reset" 8 190 9 "FUNCTION"
F G "usb_token_reset" 8 348 "void()"
V L "i" 8 349 "int8"
C L "usb_token_reset" 8 190 1 "FUNCTION"
C L "usb_token_reset" 8 190 1 "FUNCTION"
C L "usb_token_reset" 8 190 1 "FUNCTION"
C L "usb_token_reset" 8 190 1 "FUNCTION"
D G "usb_put_0len_0" 8 375 "() usb_request_send_response(0)"
C L "usb_endpoint_is_valid" 8 190 10 "FUNCTION"
V L "endpoint" 8 389 "int8"
F G "usb_endpoint_is_valid" 8 389 "int8(int8 endpoint)"
V L "direction" 8 390 "int1"
C L "usb_endpoint_is_valid" 8 190 1 "FUNCTION"
C L "usb_endpoint_is_valid" 8 190 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 8 190 16 "FUNCTION"
V L "endpoint" 8 419 "int8"
F G "usb_isr_tok_in_dne" 8 419 "void(int8 endpoint)"
C L "usb_isr_tok_in_dne" 8 190 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 8 190 1 "FUNCTION"
C L "usb_isr_tok_out_dne" 8 190 10 "FUNCTION"
V L "endpoint" 8 442 "int8"
F G "usb_isr_tok_out_dne" 8 442 "void(int8 endpoint)" "TODO:"
C L "usb_isr_tok_out_dne" 8 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 8 190 32 "FUNCTION"
F G "usb_isr_tok_setup_dne" 8 497 "void()"
C L "usb_isr_tok_setup_dne" 8 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 8 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 8 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 8 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 8 190 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardDevice" 8 549 "void()"
C L "usb_isr_tkn_setup_StandardDevice" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 8 190 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardInterface" 8 628 "void()"
V L "curr_config" 8 629 "int8"
C L "usb_isr_tkn_setup_StandardInterface" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 8 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 8 190 3 "FUNCTION"
C L "usb_isr_tkn_setup_StandardEndpoint" 8 190 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardEndpoint" 8 688 "void()"
C L "usb_Get_Descriptor" 8 190 26 "FUNCTION"
F G "usb_Get_Descriptor" 8 786 "void()"
C L "usb_Get_Descriptor" 8 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 8 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 8 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 8 190 1 "FUNCTION"
C L "usb_finish_set_address" 8 190 11 "FUNCTION"
F G "usb_finish_set_address" 8 857 "void()"
C L "usb_finish_set_address" 8 190 1 "FUNCTION"
C L "usb_finish_set_address" 8 190 1 "FUNCTION"
C L "usb_copy_desc_seg_to_ep" 8 190 3 "FUNCTION"
F G "usb_copy_desc_seg_to_ep" 8 874 "void()"
V L "i" 8 875 "int8"
V L "c" 8 876 "int8"
V G "usb_cdc_line_coding" 4 189 "{int32 dwDTERrate,int8 bCharFormat,int8 bParityType,int8 bDataBits}" "length of time, in ms, of break signal as we received in a SendBreak message."
V G "usb_cdc_break" 4 193 "int16"
V G "usb_cdc_encapsulated_cmd" 4 195 "int8[8]"
V G "usb_cdc_put_buffer" 4 197 "int8[64]"
V G "usb_cdc_put_buffer_free" 4 198 "int1"
V G "usb_cdc_put_buffer_nextin" 4 203 "int8"
V G "usb_cdc_get_buffer_status" 4 216 "{int1 got,int8 len,int8 index}"
V G "usb_cdc_get_buffer_status_buffer" 4 218 "int8[64]"
V G "usb_cdc_got_set_line_coding" 4 232 "int1"
V G "usb_cdc_carrier" 4 238 "{int1 dte_present,int1 active,int6 reserved}"
V G "__usb_cdc_state" 4 240 ""
C L "usb_isr_tok_out_cdc_control_dne" 4 185 1 "FUNCTION"
F G "usb_isr_tok_out_cdc_control_dne" 4 246 "void()"
C L "usb_isr_tok_out_cdc_control_dne" 4 185 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_control_dne" 4 185 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_control_dne" 4 185 2 "FUNCTION"
C L "usb_isr_tkn_cdc" 4 185 1 "FUNCTION"
F G "usb_isr_tkn_cdc" 4 286 "void()" "make sure the request goes to a CDC interface"
C L "usb_isr_tkn_cdc" 4 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 4 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 4 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 4 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 4 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 4 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 4 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 4 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 4 185 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_data_dne" 4 185 1 "FUNCTION"
F G "usb_isr_tok_out_cdc_data_dne" 4 331 "void()"
C L "usb_isr_tok_in_cdc_data_dne" 4 185 1 "FUNCTION"
F G "usb_isr_tok_in_cdc_data_dne" 4 348 "void()"
C L "usb_isr_tok_in_cdc_data_dne" 4 185 5 "FUNCTION"
C L "usb_isr_tok_in_cdc_data_dne" 4 185 1 "FUNCTION"
F G "usb_cdc_flush_out_buffer" 4 364 "void()"
C L "usb_cdc_flush_out_buffer" 4 185 2 "FUNCTION"
F G "usb_cdc_init" 4 374 "void()"
C L "usb_cdc_getc" 4 185 2 "FUNCTION"
F G "usb_cdc_getc" 4 391 "int8()"
V L "c" 4 392 "int8"
V L "c" 4 405 "int8"
F G "usb_cdc_putc_fast" 4 405 "void(int8 c)"
V L "old_gie" 4 406 "int1" "disable global interrupts"
C L "usb_cdc_putc_fast" 4 185 1 "FUNCTION"
C L "usb_cdc_putc_fast" 4 185 1 "FUNCTION"
C L "usb_cdc_putc_fast" 4 185 3 "FUNCTION"
V L "c" 4 431 "int8"
F G "usb_cdc_putc" 4 431 "void(int8 c)"
C L "usb_cdc_putc" 4 185 2 "FUNCTION"
D G "_CTYPE" 9 12 ""
D G "islower" 9 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 9 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 9 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 9 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 9 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 9 19 "(x)  ((x)==' ')"
D G "isxdigit" 9 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 9 21 "(x)  ((x)<' ')"
D G "isprint" 9 22 "(x)  ((x)>=' ')"
D G "isgraph" 9 23 "(x)  ((x)>' ')"
D G "ispunct" 9 24 "(x)  (((x)>' ')&&!isalnum(x))"
F G "gethex1_usb" 4 444 "int8()"
V L "digit" 4 445 "int8"
F G "gethex_usb" 4 457 "int8()"
V L "lo" 4 458 "int8"
V L "hi" 4 458 "int8"
V L "s" 4 468 "*int8"
V L "max" 4 468 "int8"
F G "get_string_usb" 4 468 "void(*int8 s,int8 max)"
V L "len" 4 469 "int8"
V L "c" 4 470 "int8"
C L "get_string_usb" 4 476 1 "FUNCTION"
D G "_STDLIB" 10 12 ""
D G "RAND_MAX" 10 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 10 24 "1"
T G "div_t" 10 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 10 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 11 13 ""
D G "ptrdiff_t" 11 18 "unsigned int16"
D G "size_t" 11 21 "unsigned int8"
D G "wchar_t" 11 22 "char"
D G "NULL" 11 23 "0"
D G "offsetof" 11 25 "(s,f) (offsetofbit(s,f)/8)"
C L "atof" 10 43 2 "FUNCTION"
C L "atof" 10 46 1 "*"
C L "atof" 10 46 1 "*"
V L "s" 10 50 "*int8"
F G "atof" 10 50 "float(*int8 s)" "Standard template: float32 atoe(char * s)"
C L "atof" 10 69 1 "*"
C L "atof" 10 69 1 "*"
C L "atof" 10 69 1 "*"
V L "s" 10 74 "*int8"
F G "atoe" 10 74 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 10 76 1 "*"
C L "atoe" 10 76 1 "*"
V L "s" 10 80 "*int8"
F G "atoi" 10 80 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 10 88 "*int8"
F G "atoi32" 10 88 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 10 76 2 "FUNCTION"
V L "num" 10 109 "sint32"
V L "base" 10 109 "int8"
V L "s" 10 109 "*int8"
F G "itoa" 10 109 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 10 111 1 "*"
C L "itoa" 10 111 1 "*"
V L "s" 10 115 "*int8"
F G "atol" 10 115 "sint16(*int8 s)" "Standard template: float32 strtod(char * s,char *endptr)"
C L "atol" 10 117 1 "*"
C L "atol" 10 117 1 "*"
C L "atol" 10 117 1 "*"
V L "s" 10 123 "*int8"
V L "endptr" 10 123 "*int8"
F G "strtod" 10 123 "float(*int8 s,*int8 endptr)" "Standart template: float32 strto(char * s,char *endptr)"
C L "strtod" 10 117 2 "FUNCTION"
C L "strtod" 10 126 1 "*"
C L "strtod" 10 126 1 "*"
C L "strtod" 10 126 2 "*"
C L "strtod" 10 139 1 "*"
C L "strtod" 10 139 1 "*"
C L "strtod" 10 139 1 "*"
C L "strtod" 10 139 1 "*"
V L "s" 10 145 "*int8"
V L "endptr" 10 145 "*int8"
V L "base" 10 145 "sint8"
F G "strtol" 10 145 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 10 147 1 "*"
C L "strtol" 10 147 1 "*"
C L "strtol" 10 147 1 "*"
C L "strtol" 10 147 1 "*"
V L "s" 10 153 "*int8"
V L "endptr" 10 153 "*int8"
V L "base" 10 153 "sint8"
F G "strtoul" 10 153 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 10 147 1 "FUNCTION"
C L "strtoul" 10 159 1 "*"
C L "strtoul" 10 159 1 "*"
C L "strtoul" 10 159 1 "*"
C L "strtoul" 10 159 1 "*"
C L "strtoul" 10 159 1 "*"
F G "rand" 10 168 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
C L "rand" 10 170 1 "*"
V L "seed" 10 190 "int32"
F G "srand" 10 190 "void(int32 seed)" "Memory management functions"
C L "srand" 10 170 3 "FUNCTION"
V L "string" 10 204 "*int8"
F G "system" 10 204 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 10 170 1 "FUNCTION"
C L "system" 10 210 1 "*"
C L "system" 10 210 1 "*"
C L "system" 10 210 1 "*"
C L "system" 10 210 1 "*"
C L "system" 10 210 1 "*"
C L "system" 10 210 1 "*"
C L "system" 10 210 1 "*"
C L "system" 10 210 1 "*"
C L "system" 10 210 1 "*"
C L "system" 10 210 1 "*"
C L "system" 10 210 4 "*"
C L "system" 10 228 1 "*"
C L "system" 10 228 1 "*"
C L "system" 10 228 1 "*"
C L "system" 10 228 1 "*"
C L "system" 10 228 1 "*"
C L "system" 10 228 1 "*"
C L "system" 10 228 1 "*"
C L "system" 10 228 1 "*"
D G "labs" 10 248 "abs"
V L "numer" 10 250 "sint8"
V L "denom" 10 250 "sint8"
F G "div" 10 250 "div_t(sint8 numer,sint8 denom)"
V L "numer" 10 251 "sint16"
V L "denom" 10 251 "sint16"
F G "ldiv" 10 251 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 10 228 4 "FUNCTION"
C L "ldiv" 11 2 7 "FUNCTION"
D G "_STRING" 12 12 ""
C L "ldiv" 11 2 7 "FUNCTION"
C L "ldiv" 9 2 7 "FUNCTION"
C L "ldiv" 12 19 10 "FUNCTION"
V L "s1" 12 34 "*int8"
V L "s2" 12 34 "*int8"
V L "n" 12 34 "int8"
F G "memmove" 12 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 12 36 "*int8"
V L "sc2" 12 37 "*int8"
C L "strcopy" 12 19 3 "FUNCTION"
V L "s1" 12 53 "*int8"
V L "s2" 12 53 "*int8"
F G "strcopy" 12 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 12 55 "*int8"
C L "strncpy" 12 19 4 "FUNCTION"
V L "s1" 12 69 "*int8"
V L "s2" 12 69 "*int8"
V L "n" 12 69 "int8"
F G "strncpy" 12 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 12 71 "*int8"
C L "strcat" 12 19 3 "FUNCTION"
V L "s1" 12 86 "*int8"
V L "s2" 12 86 "*int8"
F G "strcat" 12 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 12 88 "*int8"
C L "strncat" 12 19 2 "FUNCTION"
V L "s1" 12 104 "*int8"
V L "s2" 12 104 "*int8"
V L "n" 12 104 "int8"
F G "strncat" 12 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 12 106 "*int8"
C L "memcmp" 12 19 3 "FUNCTION"
V L "s1" 12 128 "*int8"
V L "s2" 12 128 "*int8"
V L "n" 12 128 "int8"
F G "memcmp" 12 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 12 130 "*int8"
V L "su2" 12 130 "*int8"
C L "strcmp" 12 19 2 "FUNCTION"
V L "s1" 12 142 "*int8"
V L "s2" 12 142 "*int8"
F G "strcmp" 12 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 12 19 2 "FUNCTION"
V L "s1" 12 152 "*int8"
V L "s2" 12 152 "*int8"
F G "strcoll" 12 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 12 19 4 "FUNCTION"
V L "s1" 12 165 "*int8"
V L "s2" 12 165 "*int8"
V L "n" 12 165 "int8"
F G "strncmp" 12 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 12 19 3 "FUNCTION"
V L "s1" 12 177 "*int8"
V L "s2" 12 177 "*int8"
V L "n" 12 177 "int8"
F G "strxfrm" 12 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 12 179 "*int8"
V L "n1" 12 180 "int8"
C L "memchr" 12 19 3 "FUNCTION"
V L "s" 12 199 "*int8"
V L "c" 12 199 "int8"
V L "n" 12 199 "int8"
F G "memchr" 12 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 12 201 "int8"
V L "su" 12 202 "*int8"
C L "strchr" 12 19 2 "FUNCTION"
V L "s" 12 213 "*int8"
V L "c" 12 213 "int8"
F G "strchr" 12 214 "*int8(*int8 s,int8 c)"
V L "s1" 12 225 "*int8"
V L "s2" 12 225 "*int8"
F G "strcspn" 12 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 12 227 "*int8"
V L "sc2" 12 227 "*int8"
C L "strpbrk" 12 19 4 "FUNCTION"
V L "s1" 12 240 "*int8"
V L "s2" 12 240 "*int8"
F G "strpbrk" 12 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 12 242 "*int8"
V L "sc2" 12 242 "*int8"
C L "strrchr" 12 19 2 "FUNCTION"
V L "s" 12 255 "*int8"
V L "c" 12 255 "int8"
F G "strrchr" 12 256 "*int8(*int8 s,int8 c)"
V L "p" 12 257 "*int8"
V L "s1" 12 270 "*int8"
V L "s2" 12 270 "*int8"
F G "strspn" 12 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 12 272 "*int8"
V L "sc2" 12 272 "*int8"
C L "strstr" 12 19 6 "FUNCTION"
V L "s1" 12 289 "*int8"
V L "s2" 12 289 "*int8"
F G "strstr" 12 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 12 291 "*int8"
V L "t" 12 291 "*int8"
C L "strtok" 12 19 13 "FUNCTION"
V L "s1" 12 328 "*int8"
V L "s2" 12 328 "*int8"
F G "strtok" 12 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 12 330 "*int8"
V L "end" 12 330 "*int8"
V L "save" 12 331 "*int8"
V L "s" 12 377 "*int8"
F G "strlen" 12 378 "*int8(*int8 s)"
V L "sc" 12 379 "*int8"
C L "stricmp" 12 19 2 "FUNCTION"
V L "s1" 12 388 "*int8"
V L "s2" 12 388 "*int8"
F G "stricmp" 12 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 12 19 3 "FUNCTION"
V L "s" 12 402 "*int8"
F G "strlwr" 12 403 "*int8(*int8 s)"
V L "p" 12 404 "*int8"
V L "numer" 10 273 "sint8"
V L "denom" 10 273 "sint8"
F G "div" 10 274 "div_t(sint8 numer,sint8 denom)"
V L "val" 10 275 "div_t"
V L "numer" 10 281 "sint16"
V L "denom" 10 281 "sint16"
F G "ldiv" 10 282 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 10 283 "ldiv_t"
V L "s" 10 289 "*int8"
F G "atof" 10 290 "float(*int8 s)"
V L "pow10" 10 291 "float"
V L "result" 10 292 "float"
V L "sign" 10 293 "int8"
V L "c" 10 294 "int8"
V L "ptr" 10 295 "int8"
V L "s" 10 410 "*int8"
F G "atoe" 10 411 "float(*int8 s)"
V L "pow10" 10 412 "float"
V L "result" 10 413 "float"
V L "sign" 10 414 "int8"
V L "expsign" 10 415 "int8"
V L "c" 10 416 "int8"
V L "ptr" 10 417 "int8"
V L "i" 10 418 "int8"
V L "exp" 10 419 "float"
V L "expcnt" 10 420 "int8"
C L "atoe" 10 446 1 "FUNCTION"
V L "s" 10 477 "*int8"
F G "atoi" 10 478 "sint8(*int8 s)"
V L "result" 10 479 "sint8"
V L "sign" 10 480 "int8"
V L "base" 10 480 "int8"
V L "index" 10 480 "int8"
V L "c" 10 481 "int8"
C L "atoi" 10 446 1 "FUNCTION"
C L "atoi" 10 446 1 "FUNCTION"
C L "atoi" 10 446 1 "FUNCTION"
C L "atoi" 10 446 1 "FUNCTION"
C L "atoi" 10 446 1 "FUNCTION"
C L "atoi" 10 446 1 "FUNCTION"
V L "s" 10 546 "*int8"
F G "atol" 10 547 "sint16(*int8 s)"
V L "result" 10 548 "sint16"
V L "sign" 10 549 "int8"
V L "base" 10 549 "int8"
V L "index" 10 549 "int8"
V L "c" 10 550 "int8"
C L "atol" 10 446 1 "FUNCTION"
C L "atol" 10 446 1 "FUNCTION"
C L "atol" 10 446 1 "FUNCTION"
C L "atol" 10 446 1 "FUNCTION"
C L "mult_with10" 10 446 1 "FUNCTION"
V L "num" 10 613 "int32"
F G "mult_with10" 10 614 "sint32(int32 num)"
V L "s" 10 619 "*int8"
F G "atoi32" 10 620 "sint32(*int8 s)"
V L "result" 10 621 "sint32"
V L "sign" 10 622 "int8"
V L "base" 10 622 "int8"
V L "index" 10 622 "int8"
V L "c" 10 623 "int8"
C L "atoi32" 10 446 1 "FUNCTION"
C L "atoi32" 10 446 1 "FUNCTION"
C L "atoi32" 10 446 1 "FUNCTION"
C L "atoi32" 10 446 1 "FUNCTION"
C L "atoi32" 10 446 1 "FUNCTION"
V L "num" 10 818 "sint32"
V L "base" 10 818 "int8"
V L "s" 10 818 "*int8"
F G "itoa" 10 819 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 10 820 "int32"
V L "i" 10 821 "int8"
V L "sign" 10 821 "int8"
V L "cnt" 10 821 "int8"
V L "c" 10 822 "int8"
C L "itoa" 10 446 1 "FUNCTION"
C L "itoa" 10 446 1 "FUNCTION"
C L "itoa" 10 446 1 "FUNCTION"
C L "itoa" 10 446 1 "FUNCTION"
C L "itoa" 10 446 1 "FUNCTION"
V L "s" 10 856 "*int8"
V L "endptr" 10 856 "*int8"
F G "strtod" 10 856 "float(*int8 s,*int8 endptr)"
V L "pow10" 10 857 "float"
V L "result" 10 858 "float"
V L "sign" 10 859 "int8"
V L "point" 10 859 "int8"
V L "c" 10 860 "int8"
V L "ptr" 10 861 "int8"
V L "s" 10 1118 "*int8"
V L "endptr" 10 1118 "*int8"
V L "base" 10 1118 "sint8"
F G "strtoul" 10 1119 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 10 1120 "*int8"
V L "s1" 10 1120 "*int8"
V L "sd" 10 1120 "*int8"
V L "x" 10 1121 "int16"
V L "sign" 10 1122 "int8"
V L "digits" 10 1123 "int8[1]"
C L "strtoul" 10 446 1 "FUNCTION"
C L "strtoul" 10 446 1 "FUNCTION"
C L "strtoul" 10 446 1 "FUNCTION"
V L "s" 10 1180 "*int8"
V L "endptr" 10 1180 "*int8"
V L "base" 10 1180 "sint8"
F G "strtol" 10 1181 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 10 1182 "*int8"
V L "s1" 10 1182 "*int8"
V L "sd" 10 1182 "*int8"
V L "x" 10 1183 "sint16"
V L "sign" 10 1184 "int8"
V L "digits" 10 1185 "int8[1]"
C L "strtol" 10 446 1 "FUNCTION"
C L "strtol" 10 446 1 "FUNCTION"
C L "strtol" 10 446 1 "FUNCTION"
V L "string" 10 1243 "*int8"
F G "system" 10 1244 "sint8(*int8 string)"
V L "s" 10 1248 "*int8"
V L "n" 10 1248 "int8"
F G "mblen" 10 1249 "int8(*int8 s,int8 n)"
V L "pwc" 10 1253 "*int8"
V L "s" 10 1253 "*int8"
V L "n" 10 1253 "int8"
F G "mbtowc" 10 1254 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 10 1259 "*int8"
V L "wchar" 10 1259 "int8"
F G "wctomb" 10 1260 "int8(*int8 s,int8 wchar)"
V L "pwcs" 10 1265 "*int8"
V L "s" 10 1265 "*int8"
V L "n" 10 1265 "int8"
F G "mbstowcs" 10 1266 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 10 1271 "*int8"
V L "pwcs" 10 1271 "*int8"
V L "n" 10 1271 "int8"
F G "wcstombs" 10 1272 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 10 1281 "int32"
F G "rand" 10 1284 "int16()"
V L "seed" 10 1289 "int32"
F G "srand" 10 1290 "void(int32 seed)"
V L "p1" 10 1298 "*int8"
V L "p2" 10 1298 "*int8"
T G "*_Cmpfun" 10 1298 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 10 1300 "*int8"
V L "qitems" 10 1300 "int8"
V L "qsize" 10 1300 "int8"
V L "cmp" 10 1300 "_Cmpfun"
F G "qsort" 10 1300 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 10 1301 "int8"
V L "j" 10 1301 "int8"
V L "i" 10 1301 "int8"
V L "l" 10 1301 "int8"
V L "done" 10 1302 "int1"
V L "t" 10 1303 "int8[16]"
V L "key" 10 1328 "*int8"
V L "base" 10 1328 "*int8"
V L "num" 10 1328 "int8"
V L "width" 10 1328 "int8"
V L "cmp" 10 1328 "_Cmpfun"
F G "bsearch" 10 1329 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 10 1330 "*int8"
V L "q" 10 1330 "*int8"
V L "n" 10 1331 "int8"
V L "pivot" 10 1332 "int8"
V L "val" 10 1333 "sint8"
C L "bsearch" 10 446 1 "FUNCTION"
V G "a" 0 12 "int8"
V G "b" 0 12 "int8"
V G "c" 0 12 "int8"
V G "d" 0 12 "int8"
F G "MAIN" 0 17 "void()"
C L "MAIN" 0 37 3 "FUNCTION"
C L "MAIN" 0 37 1 "FUNCTION"
C L "MAIN" 0 37 1 "FUNCTION"
C L "MAIN" 0 37 1 "FUNCTION"
C L "MAIN" 0 37 1 "FUNCTION"
C L "MAIN" 0 37 1 "FUNCTION"
C L "MAIN" 0 37 1 "FUNCTION"
C L "MAIN" 0 37 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_vref" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
